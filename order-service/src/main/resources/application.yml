#spring.datasource.url=jdbc:mysql://localhost:3306/your_database_name
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
server:
  port: 8082

spring:
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:3306/orderdb
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: update # You can set this to validate, create, create-drop, none, etc.
  application:
    name: ORDER-SERVICE
  config:
    import:
      configserver: http://localhost:9296

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-66170542.okta.com/oauth2/default
      client:
        registration:
          internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oaepd7oinwlQwulD5d7
            client-secret: JGus1TQp6Iib_QzxjEyq0_1TB62aFISyFMLAx9nIOOf6mDZE3NytQs2SECYh1eWl
        provider:
          okta:
            issuer-uri: https://dev-66170542.okta.com/oauth2/default


okta:
  oauth2:
    issuer: https://dev-66170542.okta.com/oauth2/default


resilience4j.circuitbreaker:
  instances:
    external:
      registerHealthIndicator: true
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 3
      slidingWindowType: COUNT_BASED





#  mvn -Dokta.oauth2.issuer=https://https://dev-66170542.okta.com/oauth2/default/oauth2/default
#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-url:
#      defaultZone: ${EUREKA_SERVER_ADDRESS:http://localhost:8761/eureka} -D -p6379
